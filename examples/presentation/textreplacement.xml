<?xml version="1.0" encoding="UTF-8"?>
<!-- Error in Opera: document.evaluate fails, if doctype declaration exists. 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-->
<html>
<head>
	<title>test: presentation</title>
</head>
<body>

	<div>
		<h2>Comparison of Text Replacement Solutions.</h2>
		<p>
			Those of you who have explored rich typography solutions for web development should be very familiar 
			with the different techniques floating around the Internet. Until majority of the population uses browsers that 
			support CSS3, and until commercial font licensing issues allow use of the @font-face rule to become a norm, 
			many resort to these font embedding techniques.
		</p>
		<p>
			The thing with non-standard font embedding techniques is that they mostly rely on JavaScript and sometimes 
			Flash or PHP to render text in whatever custom font is specified. Thus, choosing the right solution for a web 
			project can become tricky. This article aims to compare them by listing the pros and cons of each technique.
		</p>
	</div>
	
	<div>		
		<h3>
			sIFR
		</h3>
		<p>
			Probably one of the first full-blown text replacement solutions, sIFR (Scalable Inman Flash Replacement) uses a combination of JavaScript, CSS, 
			and Flash to render custom fonts.(<a href="http://www.mikeindustries.com/blog/sifr/">sIFR</a>) / 
			<a href="http://novemberborn.net/sifr3">sIFR 3</a>
		</p>
		<p><b>Pros</b>:
			<ul>
				<li>Fully accessible to screen readers and assistive technology</li>
				<li>Partially selectable text (cannot select surrounding elements)</li>
				<li><a href="http://jquery.thewikies.com/sifr/">jQuery integration</a></li>
				<li>Anti-aliasing results in crisp font rendering</li>
				<li>Flash-based font embedding is generally an allowable practice by most font foundries</li>
				<li>Easy to add text effects such as shadows in Flash</li>
			</ul>
		</p>
		<p><b>Cons</b>:
			<ul>
				<li>Requires Flash</li>
				<li>CPU and memory intensive</li>
				<li>Font license restrictions can be difficult to set up</li>
				<li>Can be tricky to set up</li>
				<li>Embedded fonts cannot be printed</li>
			</ul>
		</p>
	</div>
	
	<div>		
		<h3>Cufon</h3>
		<p>
			<a href="http://wiki.github.com/sorccu/cufon">Cufón</a> 
			aims to become a worthy alternative to sIFR, which despite its merits still remains painfully tricky to set up and use. 
			(<a href="http://cufon.shoqolate.com/generate/">Cufon Generator</a>)
		</p>
		<p><b>Pros:</b>
			<ul>
				<li>Easy to set up</li>
				<li>Does not require Flash</li>
				<li>Fastest loading and processing time (according to 
					<a href="http://www.slideshare.net/paul.irish/rich-typography-options-for-the-web">this presentation</a>)
				</li>
			</ul>
		</p>
		<p><b>Cons:</b>
			<ul>
				<li>Inability to highlight and copy/paste text</li>
				<li>License issues prevent many fonts from being legally embedded</li>
				<li>Does not support justified text alignment</li>
				<li>Hover state for elements other than links might result to unpredictable results</li>
				<li>Requires extra JavaScript to prevent <a href="http://en.wikipedia.org/wiki/FOUC">FOUC</a> on IE7</li>
			</ul>
		</p>
		<p>
			Cufon script also generates a JS error when used in a page that does AJAX using prototype.js
			Since the AJAX is much more important than any text rendering, both for user experience and site 
			functionality, guess which one I throw out. The error occurs no matter which order the scripts are loaded in. 
			It only actually affects IE users, FF etc manage to work despite the error/warning.
		</p>
	</div>
	
	<div>		
		<h3>Typeface</h3>
		<p><a href="http://typeface.neocracy.org/">Typeface</a> is similar to Cufon, using a JavaScript engine to render 
		fonts on a browser using canvas or VML.</p>
		<p><b>Pros:</b>
			<ul>
				<li>Easy to set up</li>
				<li>Does not require Flash</li>
				<li>Fast loading and processing time</li>
			</ul>
		</p>
		<p><b>Cons:</b>
			<ul>
				<li>Fonts are only selectable in browsers that support &lt;canvas&gt;</li>
				<li>Hover state is not supported ( <a href="http://typeface.neocracy.org/forum/topic.html?id=152">workaround</a>)</li>
				<li>License issues prevent many fonts from being legally embedded</li>
				<li>Long loading times in IE, Opera not supported!</li>
				<li>Only supports TTF (does not support .otf, PFB, and postscript fonts)</li>
				<li>Requires extra JavaScript to prevent <a href="http://en.wikipedia.org/wiki/FOUC">FOUC</a> on IE7</li>
				<li>Has spacing issues, according to 
					<a href="http://kilianvalkhof.com/2009/javascript/cufon-vs-typefacejs-which-one-is-better/">some people</a>
				</li>
			</ul>
		</p>
	</div>
	
	<div>		
		<h3>FLIR</h3>
		<p>
			<a href="http://facelift.mawhorter.net/examples/">FLIR</a> (Facelift Image Replacement) is an image replacement script 
			that uses JavaScript, PHP and the GD library to 
			dynamically generates image representations of text that use custom fonts.
		</p>
		<p><b>Pros:</b>
			<ul>
				<li>Does not require Flash or JavaScript</li>
				<li>Fonts are rendered as an image and does not violate font licensing terms</li>
				<li>Many text effects available thanks to Imagemagick</li>
			</ul>
		</p>
		<p><b>Cons:</b>
			<ul>
				<li>Inability to highlight and copy/paste text</li>
				<li>Can be painful to set up</li>
				<li>Requires a web server with PHP and the GD library enabled</li>
				<li>Finer details of fonts are 
					<a href="http://net.tutsplus.com/javascript-ajax/how-to-use-any-font-you-wish-with-flir/">not rendered very well</a> 
					by the GD library
				</li>
				<li>Takes up additional server resources to process (bandwidth and CPU)</li>
			</ul>
		</p>
	</div>
	
	<div>		
		<h3>FIR</h3>
		<p>
			<ul>
				<li><a href="http://stopdesign.com/archive/2003/03/07/replace-text.html">Using background-image to replace text</a></li>
				<li><a href="http://www.mezzoblue.com/tests/revised-image-replacement/">Revised Image Replacement Methods</a></li>
			</ul>
		</p>
	</div>
	
	<div>		
		<h3>Conclusion</h3>
		<p>
			The good thing about these techniques is that they all take into account things like accessibility, SEO readiness, 
			and browser support. These are all huge factors in web development today. For Internet Explorer users, IE6 is 
			supported at least, and for non-supported browsers, thankfully every one of them degrades gracefully into your 
			standard HTML rendered text.
		</p>
		<p>
			Every one of these techniques has its own set of advantages and disadvantages. sIFR is the oldest and most 
			“proven method”, however it relies on both Flash and JavaScript thus taking a hit on performance. FLIR uses 
			the old school technique of replacing text with images and even offers text effects. However, it is hardest 
			to set up and requires a web server with PHP and the GD library enabled.
		</p>
		<p>
			Typeface and Cufon are the most promising beign the easiest to setup. On the other hand they are both plagued 
			with licensing issues and lack of ability to select text, which for many can be a deal breaker. This appears to be 
			changing though, as <a href="http://www.typeselect.org/">Type Select</a> builds on top of typface.js and promises 
			text selection functionality. Still, it is a relatively new player and is also plagued by limitations such as 
			lack of support in IE and no support for :hover and line breaks.
		</p>
	</div>
	
	<div>		
		<h3>Sources:</h3>
		<p>
			<ul>
				<li>
					<a href="http://cssvault.com/blog/2009/07/29/text-replacement-roundup-the-pros-and-cons-of-sifr-cufon-typefacejs-and-flir/">
				text-replacement-roundup
					</a>
				</li>
				<li><a href="http://mezzoblue.com/archives/2008/05/05/image_replac/">Image Replacement + Google</a></li>
				<li><a href="http://mezzoblue.com/archives/2009/10/05/starting_wit/">Starting with @font-face</a></li>
			</ul>
		</p>
	</div>

</body>
</html>