#Develope a plugin

The Mashi toolkit is intentionally built with a small core and therefore there may be functions you are missing. It is easy to extend mashis functionality in different ways.

Functions dedicated to a single app only may be added to the 'init.js' or a 'frameset' file. But it makes more sense to implement the purpose of a new function more generally and save it in the 'plugins' directory. Normally there is no 'plugins' directory when you download the Mashi toolkit, so just add one in your Mashi app root directory and organize your directory structure as shown below:

	myapp
	  application
	  plugins
	    myplugin.js
	  system
	
#####Integration

Embed your plugin like this and your functions will be available inside your Mashi app.

	mashi.plugin('myplugin');
	

#####Plugin structure

There are no rules given for writing plugins so you can write your functions as you are used to. Though you should follow some coding conventions, if you plan to publish your plugin to the Mashi community. E.g. using namespaces:

	var texteffects = {};
	texteffect.glow = function(c) {
	   // do something
	};

#####More Information:

<a href="javascript:loadContent('development/coding-guidelines', 'Development Â» Coding Guidelines')">Coding Guidelines</a> 




	